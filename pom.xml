<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>somekaggle</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <description>Example Scala Spark App - Maven build
        This POM has two exec goals: -
        exec:exec@run-local - Run the code in spark local mode.
        exec:exec@run-yarn - Run the code on yarn cluster in client mode. For this to work core-site.xml and
        yarn-site.xml
        must exist in the main/resources directory and point to a valid cluster.
    </description>
    <inceptionYear>2020</inceptionYear>
    <properties>
        <spark.version>2.4.0</spark.version>
        <scala.version>2.12.8</scala.version>
        <scala.compat.version>2.12</scala.compat.version>
    </properties>

    <repositories>
        <!--    <repository>-->
        <!--      <id>scala-tools.org</id>-->
        <!--      <name>Scala-Tools Maven2 Repository</name>-->
        <!--      <url>http://scala-tools.org/repo-releases</url>-->
        <!--    </repository>-->
        <repository>
            <id>artima</id>
            <name>Artima Maven Repository</name>
            <url>http://repo.artima.com/releases</url>
        </repository>
    </repositories>

    <!--  <pluginRepositories>-->
    <!--    <pluginRepository>-->
    <!--      <id>scala-tools.org</id>-->
    <!--      <name>Scala-Tools Maven2 Repository</name>-->
    <!--      <url>http://scala-tools.org/repo-releases</url>-->
    <!--    </pluginRepository>-->
    <!--  </pluginRepositories>-->

    <dependencies>
        <!--    <dependency>-->
        <!--      <groupId>org.scala-lang</groupId>-->
        <!--      <artifactId>scala-library</artifactId>-->
        <!--      <version>${scala.version}</version>-->
        <!--    </dependency>-->
        <!--    <dependency>-->
        <!--      <groupId>junit</groupId>-->
        <!--      <artifactId>junit</artifactId>-->
        <!--      <version>4.4</version>-->
        <!--      <scope>test</scope>-->
        <!--    </dependency>-->
        <!--    <dependency>-->
        <!--      <groupId>org.specs</groupId>-->
        <!--      <artifactId>specs</artifactId>-->
        <!--      <version>1.2.5</version>-->
        <!--      <scope>test</scope>-->
        <!--    </dependency>-->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>org.clapper</groupId>
            <artifactId>grizzled-slf4j_${scala.compat.version}</artifactId>
            <version>1.3.1</version>
        </dependency>
        <!--    <dependency>-->
        <!--      <groupId>com.typesafe</groupId>-->
        <!--      <artifactId>config</artifactId>-->
        <!--      <version>1.3.2</version>-->
        <!--    </dependency>-->
        <!-- Test Scopes -->
        <dependency>
            <groupId>org.scalactic</groupId>
            <artifactId>scalactic_${scala.compat.version}</artifactId>
            <version>3.0.5</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.compat.version}</artifactId>
            <version>3.0.5</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <plugins>
            <!--      <plugin>-->
            <!--        <groupId>org.scala-tools</groupId>-->
            <!--        <artifactId>maven-scala-plugin</artifactId>-->
            <!--        <executions>-->
            <!--          <execution>-->
            <!--            <goals>-->
            <!--              <goal>compile</goal>-->
            <!--              <goal>testCompile</goal>-->
            <!--            </goals>-->
            <!--          </execution>-->
            <!--        </executions>-->
            <!--        <configuration>-->
            <!--          <scalaVersion>${scala.version}</scalaVersion>-->
            <!--          <args>-->
            <!--            <arg>-target:jvm-1.5</arg>-->
            <!--          </args>-->
            <!--        </configuration>-->
            <!--      </plugin>-->
            <!--      <plugin>-->
            <!--        <groupId>org.apache.maven.plugins</groupId>-->
            <!--        <artifactId>maven-eclipse-plugin</artifactId>-->
            <!--        <configuration>-->
            <!--          <downloadSources>true</downloadSources>-->
            <!--          <buildcommands>-->
            <!--            <buildcommand>ch.epfl.lamp.sdt.core.scalabuilder</buildcommand>-->
            <!--          </buildcommands>-->
            <!--          <additionalProjectnatures>-->
            <!--            <projectnature>ch.epfl.lamp.sdt.core.scalanature</projectnature>-->
            <!--          </additionalProjectnatures>-->
            <!--          <classpathContainers>-->
            <!--            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>-->
            <!--            <classpathContainer>ch.epfl.lamp.sdt.launching.SCALA_CONTAINER</classpathContainer>-->
            <!--          </classpathContainers>-->
            <!--        </configuration>-->
            <!--      </plugin>-->
            <plugin>
                <!-- see http://davidb.github.com/scala-maven-plugin -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <compilerPlugins>
                        <compilerPlugin>
                            <groupId>com.artima.supersafe</groupId>
                            <artifactId>supersafe_${scala.version}</artifactId>
                            <version>1.1.9</version>
                        </compilerPlugin>
                    </compilerPlugins>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-feature</arg>
                                <arg>-deprecation</arg>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <suites>com.mcafee.datatest.StackSpec</suites>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- disable surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <useFile>false</useFile>
                    <disableXmlReport>true</disableXmlReport>
                    <includes>
                        <include>**/*Test.*</include>
                        <include>**/*Suite.*</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>run-local</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>spark-submit</executable>
                            <arguments>
                                <argument>--master</argument>
                                <argument>local</argument>
                                <argument>${project.build.directory}/${project.artifactId}-${project.version}.jar
                                </argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>run-yarn</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <environmentVariables>
                                <HADOOP_CONF_DIR>
                                    ${basedir}/spark-remote/conf
                                </HADOOP_CONF_DIR>
                            </environmentVariables>
                            <executable>spark-submit</executable>
                            <arguments>
                                <argument>--master</argument>
                                <argument>yarn</argument>
                                <argument>${project.build.directory}/${project.artifactId}-${project.version}.jar
                                </argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Use the shade plugin to remove all the provided artifacts (such as spark itself) from the jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <!-- Remove signed keys to prevent security exceptions on uber jar -->
                    <!-- See https://stackoverflow.com/a/6743609/7245239 -->
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <transformers>
                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <mainClass>com.mcafee.datatest.StackSpec</mainClass>
                        </transformer>
                    </transformers>
                    <artifactSet>
                        <excludes>
                            <exclude>javax.servlet:*</exclude>
                            <exclude>org.apache.hadoop:*</exclude>
                            <exclude>org.apache.maven.plugins:*</exclude>
                            <exclude>org.apache.spark:*</exclude>
                            <exclude>org.apache.avro:*</exclude>
                            <exclude>org.apache.parquet:*</exclude>
                            <exclude>org.scala-lang:*</exclude>
                        </excludes>
                    </artifactSet>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>